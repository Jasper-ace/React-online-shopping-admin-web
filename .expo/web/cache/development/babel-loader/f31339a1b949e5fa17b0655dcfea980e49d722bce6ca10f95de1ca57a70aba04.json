{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Text, TextInput as PaperTextInput } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegistrationScreen = function RegistrationScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var handleRegister = function handleRegister() {\n    console.log('Registering...');\n    console.log('Username:', username);\n    console.log('Email:', email);\n    console.log('Password:', password);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Register\"\n    }), _jsx(PaperTextInput, {\n      style: styles.input,\n      label: \"Username\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      placeholder: \"Enter your username\"\n    }), _jsx(PaperTextInput, {\n      style: styles.input,\n      label: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      keyboardType: \"email-address\",\n      placeholder: \"Enter your email\"\n    }), _jsx(PaperTextInput, {\n      style: styles.input,\n      label: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      secureTextEntry: true,\n      placeholder: \"Enter your password\"\n    }), _jsx(Button, {\n      title: \"Register\",\n      onPress: handleRegister\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16\n  },\n  title: {\n    fontSize: 32,\n    marginBottom: 16,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginTop: 50\n  },\n  input: {\n    marginBottom: 12,\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10\n  }\n});\nexport default RegistrationScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","TextInput","Button","Text","PaperTextInput","jsx","_jsx","jsxs","_jsxs","RegistrationScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleRegister","console","log","style","styles","container","children","title","input","label","value","onChangeText","text","placeholder","keyboardType","secureTextEntry","onPress","create","flex","justifyContent","padding","fontSize","marginBottom","textAlign","fontWeight","marginTop","borderWidth","borderRadius","paddingHorizontal"],"sources":["C:/FINAL APP/MyReactNative1/App.js"],"sourcesContent":["// RegistrationScreen.js\nimport React, { useState } from 'react';\nimport { View, StyleSheet, TextInput, Button } from 'react-native';\nimport { Text, TextInput as PaperTextInput } from 'react-native-paper';\n\nconst RegistrationScreen = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleRegister = () => {\n    // Implement your registration logic here\n    console.log('Registering...');\n    console.log('Username:', username);\n    console.log('Email:', email);\n    console.log('Password:', password);\n    // Add your registration logic (e.g., API call) here\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Register</Text>\n\n      <PaperTextInput\n        style={styles.input}\n        label=\"Username\"\n        value={username}\n        onChangeText={(text) => setUsername(text)}\n        placeholder=\"Enter your username\"\n      />\n\n      <PaperTextInput\n        style={styles.input}\n        label=\"Email\"\n        value={email}\n        onChangeText={(text) => setEmail(text)}\n        keyboardType=\"email-address\"\n        placeholder=\"Enter your email\"\n      />\n\n      <PaperTextInput\n        style={styles.input}\n        label=\"Password\"\n        value={password}\n        onChangeText={(text) => setPassword(text)}\n        secureTextEntry\n        placeholder=\"Enter your password\"\n      />\n\n      <Button title=\"Register\" onPress={handleRegister} />\n\n      {/* Add navigation to login screen or other screens */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16,\n  },\n  title: {\n    fontSize: 32,\n    marginBottom: 16,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    marginTop: 50,\n  },\n  input: {\n    marginBottom: 12,\n    borderWidth: 1,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n  },\n});\n\nexport default RegistrationScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}