{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, TextInput as PaperTextInput, Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAuth } from \"./AuthContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _ref;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  var _useAuth = useAuth(),\n    setAuthUsername = _useAuth.setAuthUsername;\n  var handleLogin = function handleLogin() {\n    return (_ref = _ref || _asyncToGenerator(function* () {\n      var apiUrl = 'http://192.168.1.18/MyReactNative1/login.php';\n      try {\n        var response = yield fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`\n        });\n        var result = yield response.text();\n        console.log(result);\n        if (result === 'Login successful') {\n          setAuthUsername(username);\n          navigation.navigate('Home');\n        } else {\n          console.log('Login failed');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    })).apply(this, arguments);\n  };\n  var navigateToRegister = function navigateToRegister() {\n    navigation.navigate('Register');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsx(PaperTextInput, {\n      style: styles.input,\n      label: \"Username\",\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      placeholder: \"Enter your username\"\n    }), _jsx(PaperTextInput, {\n      style: styles.input,\n      label: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      secureTextEntry: true,\n      placeholder: \"Enter your password\"\n    }), _jsx(Button, {\n      mode: \"contained\",\n      style: styles.button,\n      onPress: handleLogin,\n      children: \"Login\"\n    }), _jsx(TouchableOpacity, {\n      onPress: navigateToRegister,\n      children: _jsx(Text, {\n        style: styles.linkText,\n        children: \"Don't have an account? Register\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 16\n  },\n  title: {\n    fontSize: 32,\n    marginBottom: 20,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  input: {\n    marginBottom: 12\n  },\n  button: {\n    marginTop: 16\n  },\n  linkText: {\n    marginTop: 20,\n    textAlign: 'center',\n    color: 'blue'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","TouchableOpacity","Text","TextInput","PaperTextInput","Button","useNavigation","useAuth","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","navigation","_useAuth","setAuthUsername","handleLogin","_asyncToGenerator","apiUrl","response","fetch","method","headers","body","encodeURIComponent","result","text","console","log","navigate","error","apply","arguments","navigateToRegister","style","styles","container","children","title","input","label","value","onChangeText","placeholder","secureTextEntry","mode","button","onPress","linkText","create","flex","justifyContent","padding","fontSize","marginBottom","textAlign","fontWeight","marginTop","color"],"sources":["C:/xampp/htdocs/MyReactNative1/screen/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Text, TextInput as PaperTextInput, Button } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useAuth } from './AuthContext'; // Adjust the path accordingly\r\n\r\nconst LoginScreen = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const navigation = useNavigation();\r\n  const { setAuthUsername } = useAuth();\r\n\r\n  const handleLogin = async () => {\r\n    const apiUrl = 'http://192.168.1.18/MyReactNative1/login.php';\r\n\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`,\r\n      });\r\n\r\n      const result = await response.text();\r\n\r\n      console.log(result);\r\n\r\n      if (result === 'Login successful') {\r\n        // Set authenticated username in the context\r\n        setAuthUsername(username);\r\n        navigation.navigate('Home');\r\n      } else {\r\n        console.log('Login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const navigateToRegister = () => {\r\n    navigation.navigate('Register');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Login</Text>\r\n\r\n      <PaperTextInput\r\n        style={styles.input}\r\n        label=\"Username\"\r\n        value={username}\r\n        onChangeText={(text) => setUsername(text)}\r\n        placeholder=\"Enter your username\"\r\n      />\r\n\r\n      <PaperTextInput\r\n        style={styles.input}\r\n        label=\"Password\"\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        secureTextEntry\r\n        placeholder=\"Enter your password\"\r\n      />\r\n\r\n      <Button mode=\"contained\" style={styles.button} onPress={handleLogin}>\r\n        Login\r\n      </Button>\r\n\r\n      <TouchableOpacity onPress={navigateToRegister}>\r\n        <Text style={styles.linkText}>Don't have an account? Register</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    marginTop: 16,\r\n  },\r\n  linkText: {\r\n    marginTop: 20,\r\n    textAlign: 'center',\r\n    color: 'blue',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}